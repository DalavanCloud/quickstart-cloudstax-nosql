{
  "AWSTemplateFormatVersion":"2010-09-09",
  "Description": "This template creates an AWS ECS cluster and the Cassandra Cluster Service in an existing VPC. The application runs on CassandraAccessSecurityGroup and the same VPC to access Cassandra.",
  "Parameters":{
    "ServiceSecurityGroupID": {
      "Type": "AWS::EC2::SecurityGroup::Id",
      "Description": "The SecurityGroup to access the cluster nodes."
    },
    "VPCID":{
      "Type":"AWS::EC2::VPC::Id",
      "Description":"Select a VPC that allows instances to access the Internet."
    },
    "SubnetIDs": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "The existing subnets in your VPC where you want to deploy node(s). Please make sure the Subnets match the AvailabilityZones.",
      "AllowedPattern": "subnet-[0-9a-z]{8}"
    },
    "AvailabilityZones": {
      "Type": "List<AWS::EC2::AvailabilityZone::Name>",
      "Description": "The Availability Zones for the Subnets. Please make sure the AvailabilityZones match the Subnets, or else the cluster will not work."
    },
    "LambdaSubnetCIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "Type": "String",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
      "Description": "The Subnet CIDR to run the Cassandra creation Lambda function."
    },

    "QSS3BucketName": {
      "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
      "Default": "qscloudstax",
      "Type": "String",
      "ConstraintDescription": "The Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
      "Description": "S3 bucket name for the Quick Start. The Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    },
    "QSS3KeyPrefix": {
      "AllowedPattern": "^[0-9a-zA-Z-/]*$",
      "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
      "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
      "Default": "cloudstax/cassandra/latest/",
      "Type": "String"
    },
    "DeleteVolume": {
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Whether delete Cassandra EBS volumes when deleting the stack"
    },
    "ClusterName":{
      "Type":"String",
      "Description":"Name of the cluster.",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9-]*",
      "ConstraintDescription": "Cluster name must start with a letter and can only contain letters, numbers, or hyphens."
    },
    "ServiceName": {
      "Type": "String",
      "Description": "The Cassandra Service Name",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9-]*",
      "ConstraintDescription": "Service name must start with a letter and can only contain letters, numbers, or hyphens."
    },
    "Replicas": {
      "Type": "Number",
      "Default": "3",
      "Description": "Number of replicas"
    },
    "HeapSizeMB": {
      "Type": "Number",
      "Default": "8192",
      "Description": "The Cassandra JVM Heap Size MB"
    },
    "VolumeType": {
      "Type": "String",
      "Default": "gp2",
      "AllowedValues": [
        "gp2",
        "io1",
        "st1"
      ],
      "Description": "The Data volume type"
    },
    "Iops": {
      "Type": "Number",
      "Default": 100,
      "Description": "The iops of the data volume, valid for io1 type volume only."
    },
    "VolumeSizeGB": {
      "Type": "Number",
      "Default": "400",
      "Description": "The Data volume size"
    },
    "JournalVolumeType": {
      "Type": "String",
      "Default": "gp2",
      "AllowedValues": [
        "gp2",
        "io1",
        "st1"
      ],
      "Description": "The Journal volume type"
    },
    "JournalIops": {
      "Type": "Number",
      "Default": 100,
      "Description": "The iops of the journal volume, valid for io1 type volume only."
    },
    "JournalVolumeSizeGB": {
      "Type": "Number",
      "Default": "20",
      "Description": "The Journal volume size"
    },
    "JmxRemoteUser": {
      "Type": "String",
      "Default": "cassandrajmx",
      "MaxLength": "255",
      "Description": "The Cassandra JMX Remote User"
    },
    "JmxRemotePassword": {
      "Type": "String",
      "Default": "jmxpassword",
      "NoEcho": "true",
      "MaxLength": "255",
      "Description": "Enter your Cassandra JMX Remote Password",
      "ConstraintDescription": "Input your Cassandra JMX Remote Password"
    }
  },
  "Conditions": {
    "GovCloudCondition": {
      "Fn::Equals": [
        {
          "Ref": "AWS::Region"
        },
        "us-gov-west-1"
      ]
    }
  },
  "Resources":{
    "CassandraLambdaSubnet": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": [
            "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-cloudstax-firecamp/templates/firecamp-existingvpc-lambdanet.template",
            {
              "QSS3Region": {
                "Fn::If": [
                  "GovCloudCondition",
                  "s3-us-gov-west-1",
                  "s3"
                ]
              }
            }
          ]
        },
        "Parameters": {
          "VPCID": {
            "Ref": "VPCID"
          },
          "SubnetIDs": {
            "Fn::Join": [
              ",",
              {
                "Ref": "SubnetIDs"
              }
            ]
          },
          "AvailabilityZones": {
            "Fn::Join": [
              ",",
              {
                "Ref": "AvailabilityZones"
              }
            ]
          },
          "LambdaSubnetCIDR": {
            "Ref": "LambdaSubnetCIDR"
          },
          "NameTag": {
            "Fn::Join": [
              "-",
              [
                {
                  "Ref": "ClusterName"
                },
                "cassandra-lambda"
              ]
            ]
          }
        }
      }
    },

    "CassandraLambda": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": [
            "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/cassandra-lambda.template",
            {
              "QSS3Region": {
                "Fn::If": [
                  "GovCloudCondition",
                  "s3-us-gov-west-1",
                  "s3"
                ]
              }
            }
          ]
        },
        "Parameters": {
          "DeleteVolume": {
            "Ref": "DeleteVolume"
          },
          "ClusterName": {
            "Ref": "ClusterName"
          },
          "ServiceName": {
            "Ref": "ServiceName"
          },
          "Replicas": {
            "Ref": "Replicas"
          },
          "HeapSizeMB": {
            "Ref": "HeapSizeMB"
          },
          "VolumeType": {
            "Ref": "VolumeType"
          },
          "Iops": {
            "Ref": "Iops"
          },
          "VolumeSizeGB": {
            "Ref": "VolumeSizeGB"
          },
          "JournalVolumeType": {
            "Ref": "JournalVolumeType"
          },
          "JournalIops": {
            "Ref": "JournalIops"
          },
          "JournalVolumeSizeGB": {
            "Ref": "JournalVolumeSizeGB"
          },
          "JmxRemoteUser": {
            "Ref": "JmxRemoteUser"
          },
          "JmxRemotePassword": {
            "Ref": "JmxRemotePassword"
          },
          "QSS3BucketName": {
            "Ref": "QSS3BucketName"
          },
          "QSS3KeyPrefix": {
            "Ref": "QSS3KeyPrefix"
          },
          "ServiceSecurityGroupID": {
            "Ref": "ServiceSecurityGroupID"
          },
          "SubnetIDs": {
            "Fn::GetAtt": [
              "CassandraLambdaSubnet",
              "Outputs.LambdaSubnet"
            ]
          }
        }
      }
    }
  }
}
